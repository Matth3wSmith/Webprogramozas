/*1. Az ige (f√ºgg≈ëlegesen) jobban k√∂z√©pen jelenjen meg nagyobb bet≈±m√©retben.
2. Nem sz√≠nes. Lehetne mondjuk a h√°tt√©rben egy brit z√°szl√≥, vagy angli√°ra jellemz≈ë kis k√©peken, emeletes busz, big ben, buckingham palota ≈ër, angol telefon f√ºlke stb, de ez mindegy, egysz√≠n≈± r√≥zsasz√≠n is lehet azt mondt√°k a 10c-s l√°nyok.
3. j√≥ lenne ha k√ºl√∂n gombokkal lehetne beh√≠vni a tesztelend≈ë adatb√°zist √©s nem bet√∂lt√∂getni, hanem legyen ott egy gomb h 88 ige, 101 ige, fonetikus √°t√≠r√°s√∫, stb. √©s amelyikre r√°kattintok azt az adatb√°zist ind√≠tja el a progi.
4. lehessen az egyes v√°laszokat min≈ës√≠tenem mondjuk k√©t gombbal, egy right answer meg egy wrong answer gomb.
5. jo lenne ha sz√°moln√° is nekem a jo √©s rossz adott v√°laszokat vagyis az √©n min≈ës√≠t√©seimet ahogy kattintok, a v√©geredm√©nyt pedig kielemzi vagyis hogy 20 k√©rdezett ig√©b≈ël mondjuk 16 right 4 wrong √©s jelen√≠tse meg h ez h√°ny % irja ki nekem h ez 80%, az m√°r csak hab lenne a tort√°n ha azt is kiirn√° h ez igy sajnos 4es. ü§£ü§£ü§£
6. j√≥ lenne ha kiv√°laszthatn√°m a challange er≈ëss√©g√©t, √©s mondjuk 5 iget kerdez≈ë v√°ltozatot is elind√≠thatn√©k de mondjuk lehetne 10 ig√©s challenge √©s 20.
7. J√≥ lenne ha letelik a kiv√°lasztott igemennyis√©g≈± j√°t√©k √©s ut√°na meg√°llna, vagy null√°zhatn√°m esetleg mondjuk b√°rmikor pl a 4. v√°lasz ut√°n vagy egyszer≈±en csak egy resettel ujra elind√≠tani null√°r√≥l, stb.*/

const verbs88 = 
`be
become
begin
bend
bite
blow
break
bring
build
burn
buy
can
catch
choose
come
cost
cut
do
draw
drink
drive
eat
fall
feel
fight
find
fly
forget
get
give
go
grow
hang
have
hear
hide
hit
keep
know
lay
lead
learn
leave
lend
let
lose
make
mean
meet
overcome
pay
put
read
ride
ring
run
say
see
sell
send
set
shake
shine
shoot
show
shut
sing
sink
sit
sleep
smell
speak
spell
spend
spill
stand
steal
swim
take
teach
tell
think
throw
understand
wake
wear
win
write`.split("\n").map(szo => szo.trim())

let kiirt = 0;
let mennyiseg = 0;
let answers = [0,0];
let verbBox;
let repulo;

function main(){
}

function inditas(){
    let file =  document.getElementById("file").files[0];
    if (file){

    }
    else{
        //TOAST felnyit√°sa
    }

    console.log(file);
    let test = document.getElementById("verbs").value
    let verbDiv = document.getElementsByClassName("verbBox")[0]

    mennyiseg = Number(document.getElementById("mennyiseg").value)
    verbDiv.classList.remove("hidden")
    //Siman kozepen a sz√∂veg
    /*verbBox = verbDiv.children[0]*/

    //Rep√ºl≈ë megjelen√≠t√©se
    repulo = document.getElementsByClassName("cloud")[0];
    repulo.classList.add("repuloBe");
    repulo.classList.remove("hidden");

    //Repul≈ën rajta
    verbBox=document.getElementById("verbBox");

    answers = [0,0]

    verbBox.innerText = verbs88[Math.floor(Math.random()*verbs88.length)]


    let wrongBtn = document.getElementById("wrong")
    wrongBtn.addEventListener("click",wrong)
    let rightBtn = document.getElementById("right")
    rightBtn.addEventListener("click",right)

    /*for (let i = 0; i < mennyiseg; i++){

    }*/

}

function wrong(){
    answers[1]++;

    verbBox.innerText = verbs88[Math.floor(Math.random()*verbs88.length)]
    kiirt++;
    ellenorzes();
}

function right(){
    answers[0]++;

    verbBox.innerText = verbs88[Math.floor(Math.random()*verbs88.length)]

    kiirt++;
    ellenorzes();
}

function ellenorzes(){
    console.log(kiirt,mennyiseg);
    if (mennyiseg===kiirt){
        repulo.classList.remove("repuloBe");
        repulo.classList.add("repuloKi");

        repulo.addEventListener("animationend",eltunes);
        mennyiseg=0;
        kiirt=0;
        answers=[0,0];
    }
}

function eltunes(){
    console.log("elt≈±ntem");
    repulo.classList.remove("repuloKi");
    repulo.classList.add("hidden");
    repulo.removeEventListener("animationend",eltunes);
}